[package]
name = "slint-pico"
version = "0.1.0"
edition = "2021"
build = "build.rs"
rust-version = "1.68" # Because of the allocator
authors = ["Lasse Kelling <lasse@kelling.de>"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html


[dependencies]
slint = { version = "1.0.0", default-features = false, features = ["compat-1-0"] }

# Embedded-HAL + BoardSupport-Packages für RP-Pico
rp-pico = { version = "0.8.0", optional = true, features = ["critical-section-impl"]} #TODO Upgrade auf 0.8.0 vornehmen
cortex-m = { version = "0.7.7", optional = true }
cortex-m-rt = {version = "0.7.3", optional = true }
embedded-alloc = { version = "0.5.1", optional = true }
embedded-hal = {version = "0.2.7", optional = true }
fugit = { version = "0.3.7", optional = true }

# PanicHandler
panic-halt = { version = "0.2.0", optional = true } # Wenn man keine DebugProbe verwendet
defmt = { version = "0.3", optional = true }
defmt-rtt = { version = "0.4.0", optional = true }
panic-probe = { version = "0.3.1", features = ["print-defmt"], optional = true}

# Display und Touch
st7789 = { version = "0.7", optional = true } # Displaycontroller
shared-bus = { version = "0.2.5", optional = true } # Display und Touch müssen sich einen SPI-Bus teilen
display-interface-spi = { version = "0.4.1", optional = true }
embedded-graphics-core = { version = "0.3.3", optional = true }

# Wi-Fi und Bluetooth
embassy-embedded-hal = "0.0.0"
cyw43 = "0.0.0"
cyw43-pio = "0.0.0"
embassy-rp = "0.0.0"


[build-dependencies]
slint-build = { version = "1.0.0" }


[features]
simulator = ["slint/renderer-winit-software", "slint/backend-winit"]
pico = [
    "slint/unsafe-single-threaded",
    "slint/libm",
    "rp-pico",
    "cortex-m",
    "cortex-m-rt",
    "embedded-alloc",
    "embedded-hal",
    "fugit",
    "st7789",
    "display-interface-spi",
    "embedded-graphics-core",
    "shared-bus",
    #"panic-halt",
    "defmt",
    "defmt-rtt",
    "panic-probe",
    "panic-probe/print-defmt"
]


[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true


# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false


[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false


[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

